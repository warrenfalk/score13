#!/usr/bin/env node
var http = require('http');
var url = require('url');
var path = require('path');
var fs = require('fs');
var port = 8891;

String.prototype.endsWith = function(suffix) {
    return this.indexOf(suffix, this.length - suffix.length) !== -1;
};

http.createServer(function (req, res) {
	var reqpath = url.parse(req.url).pathname;

	if (reqpath == '/')
		reqpath = '/index.html';

	var seg = reqpath.split('/');
	
	var root = seg[1];
	// forward web service requests
	if (seg.length > 0 && seg[0] == 'webservice') {
		seg = seg.slice(1);
		reqpath = seg.join('/');
		console.log(reqpath);
		var headers = req.headers;
		var proxy_options = {
			hostname: 'localhost',
			port: 81,
			path: '/' + reqpath,
			method: req.method,
			headers: headers
			};
		var proxy_request = http.request(proxy_options, function(proxy_response) {
			proxy_response.on('data', function(chunk) {
				res.write(chunk, 'binary');
			});
			
			proxy_response.on('end', function() {
				res.end();
			});
			
			res.writeHead(proxy_response.statusCode, proxy_response.headers);
		});
		
		proxy_request.on('error', function(e) {
			console.log('problem with request: ' + e.message);
		});
		
		req.on('data', function(chunk) {
			proxy_request.write(chunk, 'binary');
		});
		
		req.on('end', function() {
			proxy_request.end();
		});
	}
	else {
		// assume this is a filesystem request
		reqpath = seg.join('/');
		if (reqpath == '')
			reqpath = 'index.html';
		console.log(reqpath);
		if (reqpath === '/cordova.js') {
			res.writeHeader(200, {"Content-Type": "text/javascript"});
			res.write("SIMULATOR=true;\n");
			res.end();
		}
		else {
			var fspath = '../www' + reqpath;
			fs.exists(fspath, function(exists) {
				if (!exists) {
					res.writeHeader(404, {"Content-Type": "text/plain"});
					res.write("404 Not Found\n");
					res.end();
				}
				else {
					fs.readFile(fspath, "binary", function(err, file) {
						if (err) {
							res.writeHeader(500, {"Content-Type": "text/plain"});
							res.write(err + "\n");
							res.end();
						}
						else {
							if (fspath.endsWith(".html"))
								contentType = "text/html";
							else if (fspath.endsWith(".gif"))
								contentType = "image/gif";
							else if (fspath.endsWith(".svg"))
								contentType = "image/svg+xml";
							else if (fspath.endsWith(".png"))
								contentType = "image/png";
							else if (fspath.endsWith(".css"))
								contentType = "text/css";
							else if (fspath.endsWith(".js"))
								contentType = "text/javascript";
							else if (fspath.endsWith(".xml"))
								contentType = "text/xml";
							else
								contentType = "application/x-octet-stream";
							res.writeHeader(200, {"Content-Type": contentType});
							res.write(file, "binary");
							res.end();
						}
					});
				}
			});
		}
	}
}).listen(port);

console.log(__dirname);
console.log('http://localhost:' + port + '/');
